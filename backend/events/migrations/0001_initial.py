# Generated by Django 4.2.10 on 2024-04-15 13:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Adress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_event', models.CharField(choices=[('online', 'онлайн'), ('online+offline', 'онлайн+оффлайн')], max_length=50, verbose_name='Тип мероприятия')),
                ('street', models.CharField(max_length=255, verbose_name='Улица')),
                ('house_number', models.CharField(max_length=50, verbose_name='Номер дома')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='Broadcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_event', models.CharField(choices=[('online', 'онлайн'), ('online+offline', 'онлайн+оффлайн')], max_length=50, verbose_name='Тип мероприятия')),
                ('file', models.FileField(upload_to='files/')),
            ],
            options={
                'verbose_name': 'Трансляция',
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_event', models.CharField(choices=[('online', 'онлайн'), ('online+offline', 'онлайн+оффлайн')], max_length=50, verbose_name='Тип мероприятия')),
                ('messages', models.CharField(max_length=255, verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'Чат',
                'verbose_name_plural': 'Чаты',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название города')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('speakerDescription', models.CharField(max_length=255, verbose_name='Описание спикера')),
                ('format', models.CharField(choices=[('online', 'онлайн'), ('online+offline', 'онлайн+оффлайн')], max_length=50, verbose_name='Тип мероприятия')),
                ('status', models.CharField(choices=[('future', 'будущие'), ('current', 'текущие (идет эфир)'), ('completed', 'завершенные')], max_length=50, verbose_name='Статус мероприятия')),
                ('date', models.DateField(verbose_name='дата')),
                ('time', models.TimeField(verbose_name='время')),
                ('city', models.CharField(choices=[('future', 'будущие'), ('current', 'текущие (идет эфир)'), ('completed', 'завершенные')], max_length=50, verbose_name='Город')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('seatsLeft', models.IntegerField(verbose_name='Количество мест')),
                ('colorTheme', models.IntegerField(choices=[('1', '1'), ('2', '2'), ('3', '3')], verbose_name='Цветовая тема')),
                ('duration', models.TimeField(verbose_name='Продолжительность')),
                ('themes', models.CharField(choices=[('Backend', 'Backend'), ('IOS', 'IOS'), ('Android', 'Android'), ('UI/UX дизайн', 'UI/UX дизайн')], max_length=50, verbose_name='Тема мероприятия')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_event', models.CharField(choices=[('online', 'онлайн'), ('online+offline', 'онлайн+оффлайн')], max_length=50, verbose_name='Тип мероприятия')),
                ('question', models.CharField(max_length=255, verbose_name='Вопрос')),
                ('answer', models.CharField(max_length=255, verbose_name='Ответ')),
            ],
            options={
                'verbose_name': 'Опрос',
                'verbose_name_plural': 'Опросы',
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=255, verbose_name='Отчество')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('post', models.CharField(blank=True, max_length=255, null=True, verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Спикер',
                'verbose_name_plural': 'Спикеры',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite', to='events.event', verbose_name='Мероприятие')),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранное',
                'ordering': ('id',),
            },
        ),
    ]
